Index: src/main/java/WeatherBot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.json.JSONArray;\nimport org.json.JSONException;\nimport org.json.JSONObject;\nimport org.telegram.telegrambots.bots.TelegramLongPollingBot;\nimport org.telegram.telegrambots.meta.api.methods.send.SendMessage;\nimport org.telegram.telegrambots.meta.api.objects.Update;\nimport org.telegram.telegrambots.meta.exceptions.TelegramApiException;\nimport java.io.IOException;\nimport org.apache.commons.lang3.StringUtils;\n\n// Vedere se fare un cambio di lingua\n\n\npublic class WeatherBot extends TelegramLongPollingBot {\n\n    private final String token;\n    private final String apiKey;\n\n    public WeatherBot(String token, String apiKey){\n        this.token = token;\n        this.apiKey = apiKey;\n    }\n\n    public void onUpdateReceived(Update update) {\n\n        if (update.hasMessage() && update.getMessage().hasText()) {\n            String messageText = update.getMessage().getText();\n            String chatId = update.getMessage().getChatId().toString();\n\n            if (messageText.startsWith(\"/\")) {\n                // Comando ricevuto\n                String command = messageText.toLowerCase();\n                try {\n                    handleCommand(command, chatId);\n                } catch (IOException e) {\n                    e.printStackTrace();\n                    sendMessage(chatId, \"Si è verificato un errore durante l'elaborazione del comando.\");\n                }\n            } else {\n                // Messaggio non è un comando\n                sendMessage(chatId, \"Comando non valido. Utilizza i comandi /meteo o /previsioniprossimogiorno.\");\n            }\n        }\n    }\n\n    public void handleCommand(String command, String chatId) throws IOException {\n\n            if (command.startsWith(\"/meteo\")) {\n                String cityName = command.substring(7); // Estrarre il nome della città dal comando\n\n                WeatherAPI weatherAPI = new WeatherAPI(apiKey);\n                String weatherInfo = weatherAPI.getWeatherInfo(cityName, apiKey);\n\n                if (weatherInfo != null) {\n                    String response = processWeatherData(weatherInfo, cityName);\n                    sendMessage(chatId, response);\n                } else {\n                    sendMessage(chatId, \"Impossibile ottenere le informazioni meteo per la città specificata.\");\n                }\n            }\n\n            if (command.startsWith(\"/previsioniprossimogiorno\")) {\n                String cityNameNextDay = command.substring(26); // Estrarre il nome della città dal comando\n\n                WeatherAPI weatherAPINextDay = new WeatherAPI(apiKey);\n                String weatherInfoNextDay = weatherAPINextDay.getWeatherInfo(cityNameNextDay, apiKey);\n\n                if (weatherInfoNextDay != null) {\n                    String response = getNextDayForecast(weatherInfoNextDay, cityNameNextDay);\n                    sendMessage(chatId, response);\n                } else {\n                    sendMessage(chatId, \"Impossibile ottenere le informazioni meteo per la città specificata.\");\n                }\n            }\n    }\n\n\n    private String processWeatherData(String weatherData, String cityName) {\n        try {\n            // Elabora i dati JSON ottenuti dall'API di Weather VisualCrossing\n            JSONObject jsonData = new JSONObject(weatherData);\n\n\n            // Prende dal JSON l'array in base ai giorni inseriti (in questo momento non è possibile inserire più giorni)\n            JSONArray daysArray = jsonData.getJSONArray(\"days\");\n\n            for (int i = 0; i < jsonData.length(); i++) {\n                JSONObject dayValue = daysArray.getJSONObject(i);\n\n                double maxtemp=dayValue.getDouble(\"tempmax\");\n                double mintemp=dayValue.getDouble(\"tempmin\");\n                String condizioni = dayValue.getString(\"conditions\");\n                String icona = dayValue.getString(\"icon\");\n                String emoji = getWeatherEmoji(icona);\n                double pop = dayValue.getDouble(\"precip\");\n                String giorno = dayValue.getString(\"datetime\");\n                String alba = dayValue.getString(\"sunrise\");\n                String tramonto = dayValue.getString(\"sunset\");\n\n                cityName = StringUtils.capitalize(cityName);\n\n\n                // return \"Il meteo di \" + cityName + \" è \" + weatherCondition + \" con temperatura di \" + temperature + \"°C.\";\n                String message = \" \" + cityName + \"\\n\" + emoji + \" \" + condizioni + \"\\n\" +\n                        \"\\uD83C\\uDF21\\uFE0F \" + \" Max temperature: \" + maxtemp + \" C°\" + \"\\n\" + \"Min temperature: \" + mintemp + \" C°\" + \"\\n\" +\n                        \"\\uD83C\\uDF05 \" + \"Sunrise is at: \" + alba + \"\\n\" +\n                        \"\\uD83C\\uDF04 \" + \"Sunset is at: \" + tramonto + \"\\n\" +\n                        \" Rain probabilities are: \" + pop + \"%\" + \"\\n\" +\n                        \" (\" + giorno + \")\";\n\n\n                return message;\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return \"Impossibile ottenere le informazioni meteo per \" + cityName;\n    }\n\n    private String getNextDayForecast(String forecastData, String cityName) {\n        try {\n            JSONObject forecastJson = new JSONObject(forecastData);\n            JSONArray daysArray = forecastJson.getJSONArray(\"days\");\n\n            if (daysArray.length() > 1) {\n                JSONObject nextDay = daysArray.getJSONObject(1);\n                double maxtemp=nextDay.getDouble(\"tempmax\");\n                double mintemp=nextDay.getDouble(\"tempmin\");\n                String condizioni = nextDay.getString(\"conditions\");\n                String icona = nextDay.getString(\"icon\");\n                String emoji = getWeatherEmoji(icona);\n                double pop = nextDay.getDouble(\"precip\");\n                String giorno = nextDay.getString(\"datetime\");\n                String alba = nextDay.getString(\"sunrise\");\n                String tramonto = nextDay.getString(\"sunset\");\n                cityName = StringUtils.capitalize(cityName);\n\n\n                // return \"Il meteo di \" + cityName + \" è \" + weatherCondition + \" con temperatura di \" + temperature + \"°C.\";\n                String message = \" \" + cityName + \"\\n\" + emoji + \" \" + condizioni + \"\\n\" +\n                        \"\\uD83C\\uDF21\\uFE0F \" + \" Max temperature: \" + maxtemp + \" C°\" + \"\\n\" + \"Min temperature: \" + mintemp + \" C°\" + \"\\n\" +\n                        \"\\uD83C\\uDF05 \" + \"Sunrise is at: \" + alba + \"\\n\" +\n                        \"\\uD83C\\uDF04 \" + \"Sunset is at: \" + tramonto + \"\\n\" +\n                        \" Rain probabilities are: \" + pop + \"%\" + \"\\n\" +\n                        \" (\" + giorno + \")\";\n                return message;\n            } else {\n                return \"Nessuna previsione disponibile per il prossimo giorno.\";\n            }\n        } catch (JSONException e) {\n            e.printStackTrace();\n            return \"Errore nell'elaborazione delle previsioni meteo per il prossimo giorno.\";\n        }\n    }\n\n\n    private String getWeatherEmoji(String condition){\n        switch(condition){\n            case \"clear-day\":\n                return \"☀\\uFE0F\";\n            case \"clear-night\":\n                return \"\\uD83C\\uDF19\";\n            case \"Cloudy\":\n                return \"☁\\uFE0F\";\n            case \"fog\":\n                return \"\\uD83C\\uDF2B\\uFE0F\";\n            case \"hail\":\n                return \"\\uD83E\\uDDCA\";\n            case \"partly-cloudy-day\":\n                return \"⛅\";\n            case \"partly-cloudy-night\":\n                return \"☁\\uFE0F\";\n            case \"rain-snow-showers-day\":\n                return \"\\uD83C\\uDF28\";\n            case \"rain-snow-showers-night\":\n                return \"\\uD83C\\uDF28\";\n            case \"rain-snow\":\n                return \"\\uD83C\\uDF28\";\n            case \"rain\":\n                return \"\\uD83C\\uDF27\";\n            case \"showers-day\":\n                return \"\\uD83C\\uDF26\";\n            case \"showers-night\":\n                return \"\\uD83C\\uDF27\";\n            case \"sleet\":\n                return \"❄\\uFE0F\";\n            case \"snow-showers-day\":\n                return \"\\uD83C\\uDF28\\uFE0F\";\n            case \"snow-showers-night\":\n                return \"\\uD83C\\uDF28\\uFE0F\";\n            case \"snow\":\n                return \"❄\\uFE0F\";\n            case \"thunder-rain\":\n                return \"⛈\";\n            case \"thunder-showers-day\":\n                return \"⛈\";\n            case \"thunder-showers-night\":\n                return \"⛈\";\n            case \"thunder\":\n                return \"\\uD83C\\uDF29\\uFE0F\";\n            case \"wind\":\n                return \"\\uD83D\\uDCA8\";\n\n            default:\n                return \"\";\n        }\n    }\n\n    private void sendMessage(String chatId, String text) {\n        SendMessage message = new SendMessage(chatId, text);\n\n        try {\n            execute(message);\n        } catch (TelegramApiException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public String getBotUsername() {\n        return \"meteorologo_bot\";\n    }\n\n    public String getBotToken() {\n        return token;\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/WeatherBot.java b/src/main/java/WeatherBot.java
--- a/src/main/java/WeatherBot.java	(revision 1ae524d0fe3361264ae2d82c848288b90cde3240)
+++ b/src/main/java/WeatherBot.java	(date 1687809357927)
@@ -84,8 +84,7 @@
             // Prende dal JSON l'array in base ai giorni inseriti (in questo momento non è possibile inserire più giorni)
             JSONArray daysArray = jsonData.getJSONArray("days");
 
-            for (int i = 0; i < jsonData.length(); i++) {
-                JSONObject dayValue = daysArray.getJSONObject(i);
+                JSONObject dayValue = daysArray.getJSONObject(0);
 
                 double maxtemp=dayValue.getDouble("tempmax");
                 double mintemp=dayValue.getDouble("tempmin");
@@ -110,7 +109,7 @@
 
 
                 return message;
-            }
+
         } catch (Exception e) {
             e.printStackTrace();
         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ba034e88-99e2-4fd2-bf99-361b7d49c213\" name=\"Changes\" comment=\"Formattato meglio il messaggio, la lingua rimane in inglese.\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/WeatherBot.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/WeatherBot.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">\n    <option name=\"selectedUrlAndAccountId\">\n      <UrlAndAccount>\n        <option name=\"accountId\" value=\"02e58ef6-0663-4d6b-be48-3030d9bfe40c\" />\n        <option name=\"url\" value=\"https://github.com/ddaavviiddee/WeatherTelegramBot.git\" />\n      </UrlAndAccount>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2R9ceDI3g5aQKd9MTXPTcFS8gcn\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"WeatherTelegramBot\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ba034e88-99e2-4fd2-bf99-361b7d49c213\" name=\"Changes\" comment=\"\" />\n      <created>1686665831793</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1686665831793</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"New\">\n      <created>1686674701561</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1686674701561</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"ooo inizia a funziinare\">\n      <created>1687014993487</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687014993487</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Gestire meglio i dati e capire se farli in inglese o meno\">\n      <created>1687015816858</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687015816858</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Gestire meglio i dati e capire se farli in inglese o meno\">\n      <created>1687015915638</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687015915638</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Gestire meglio i dati e capire se farli in inglese o meno\">\n      <created>1687015991934</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687015991934</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Formattato meglio il messaggio, la lingua rimane in inglese.\">\n      <created>1687108056111</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1687108056111</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"7\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"New\" />\n    <MESSAGE value=\"ooo inizia a funziinare\" />\n    <MESSAGE value=\"Gestire meglio i dati e capire se farli in inglese o meno\" />\n    <MESSAGE value=\"Formattato meglio il messaggio, la lingua rimane in inglese.\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Formattato meglio il messaggio, la lingua rimane in inglese.\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1ae524d0fe3361264ae2d82c848288b90cde3240)
+++ b/.idea/workspace.xml	(date 1687360999306)
@@ -4,9 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ba034e88-99e2-4fd2-bf99-361b7d49c213" name="Changes" comment="Formattato meglio il messaggio, la lingua rimane in inglese.">
+    <list default="true" id="ba034e88-99e2-4fd2-bf99-361b7d49c213" name="Changes" comment="Aggiunto un comando">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/WeatherBot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/WeatherBot.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -121,7 +120,23 @@
       <option name="project" value="LOCAL" />
       <updated>1687108056111</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="Aggiunto un comando">
+      <option name="closed" value="true" />
+      <created>1687273432952</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1687273432952</updated>
+    </task>
+    <task id="LOCAL-00008" summary="Aggiunto un comando">
+      <option name="closed" value="true" />
+      <created>1687273514810</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1687273514810</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -141,6 +156,7 @@
     <MESSAGE value="ooo inizia a funziinare" />
     <MESSAGE value="Gestire meglio i dati e capire se farli in inglese o meno" />
     <MESSAGE value="Formattato meglio il messaggio, la lingua rimane in inglese." />
-    <option name="LAST_COMMIT_MESSAGE" value="Formattato meglio il messaggio, la lingua rimane in inglese." />
+    <MESSAGE value="Aggiunto un comando" />
+    <option name="LAST_COMMIT_MESSAGE" value="Aggiunto un comando" />
   </component>
 </project>
\ No newline at end of file
